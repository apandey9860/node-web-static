-- Create a table to store user access levels and descriptions
CREATE TABLE PERSON.USER_ACCESS (
    USER_ACCESS_ID SERIAL PRIMARY KEY,
    USER_ACCESS_LEVEL VARCHAR(200) NOT NULL,
    USER_ACCESS_DESCRIPTION VARCHAR(200)
);

-- Create a table to store user information including hashed passwords
CREATE TABLE PERSON.USERS (
    USER_ID SERIAL PRIMARY KEY,
    USER_NAME VARCHAR(100) NOT NULL,
    USER_PASSWORD TEXT NOT NULL,
    USER_PHONE VARCHAR(50) NOT NULL,
    USER_EMAIL VARCHAR(50) NOT NULL,
    USER_ADDRESS VARCHAR(100) NOT NULL,
    USER_ACCESS_ID INT NOT NULL,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user_access FOREIGN KEY (USER_ACCESS_ID) REFERENCES PERSON.USER_ACCESS(USER_ACCESS_ID)
);

-- Create a table to log events associated with user actions
CREATE TABLE MISC.EVENT_LOG (
    EVENT_LOG_ID SERIAL PRIMARY KEY,
    USER_ID INT,
    ACTION_DONE TEXT NOT NULL,
    EVENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES PERSON.USERS(USER_ID)
);


-- Table storing product categories with details and timestamps.
CREATE TABLE TRADE.T_CATEGORY (
    T_CATEGORY_ID SERIAL PRIMARY KEY,
    T_CATEGORY_NAME VARCHAR(200) NOT NULL,
    T_CATEGORY_DESC TEXT,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Table storing product details including a reference to categories.
CREATE TABLE TRADE.T_PRODUCT (
    T_PRODUCT_ID SERIAL PRIMARY KEY,
    T_PRODUCT_NAME VARCHAR(200) NOT NULL,
    T_PRODUCT_PRICE VARCHAR(100),
    T_PRODUCT_DESC TEXT,
    T_CATEGORY_ID INT,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (T_CATEGORY_ID) REFERENCES TRADE.T_CATEGORY(T_CATEGORY_ID)
);

-- Table storing product pictures with a reference to products.
CREATE TABLE TRADE.T_PROD_PIC (
    T_PROD_PIC_ID SERIAL PRIMARY KEY,
    T_PROD_PIC_NAME VARCHAR(200) NOT NULL,
    T_PROD_PIC_DATA BYTEA,
    T_PRODUCT_ID INT,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (T_PRODUCT_ID) REFERENCES TRADE.T_PRODUCT(T_PRODUCT_ID)
);

-- Table tracking product-related timeline events and user interactions.
CREATE TABLE TRADE.T_PROD_TIMELINE (
    T_PROD_TLINE_ID SERIAL PRIMARY KEY,
    T_PROD_TLINE_INTERVAL INTERVAL,
    T_PROD_TLINE_FINISH TIMESTAMP,
    T_PROD_TLINE_DELIVERY INT,
    T_PRODUCT_ID INT,
    USER_ID INT NOT NULL,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (T_PRODUCT_ID) REFERENCES TRADE.T_PRODUCT(T_PRODUCT_ID),
    FOREIGN KEY (USER_ID) REFERENCES PERSON.USERS(USER_ID)
);

-- Table storing historical data including product and user details.
CREATE TABLE TRADE.T_HISTORY (
    T_HISTORY_ID SERIAL PRIMARY KEY,
    T_CATEGORY_NAME VARCHAR(200),
    T_PRODUCT_NAME VARCHAR(200),
    T_PROD_PIC_DATA BYTEA,
    T_PRODUCT_PRICE VARCHAR(100),
    T_PROD_TLINE_INTERVAL INTERVAL,
    T_PROD_TLINE_FINISH TIMESTAMP,
    USER_NAME VARCHAR(100) NOT NULL,
    USER_FULLNAME VARCHAR(100) NOT NULL,
    USER_PHONE VARCHAR(50) NOT NULL,
    USER_EMAIL VARCHAR(50) NOT NULL,
    USER_ADDRESS VARCHAR(100) NOT NULL
);