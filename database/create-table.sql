-- Create a table to store user access levels and descriptions
CREATE TABLE PERSON.USER_ACCESS (
    USER_ACCESS_ID SERIAL PRIMARY KEY,
    USER_ACCESS_LEVEL VARCHAR(200) NOT NULL,
    USER_ACCESS_DESCRIPTION VARCHAR(200)
);

-- Create a table to store user information including hashed passwords
CREATE TABLE PERSON.USERS (
    USER_ID SERIAL PRIMARY KEY,
    USER_NAME VARCHAR(100) NOT NULL,
    USER_PASSWORD TEXT NOT NULL,
    USER_PHONE VARCHAR(50) NOT NULL,
    USER_EMAIL VARCHAR(50) NOT NULL,
    USER_ADDRESS VARCHAR(100) NOT NULL,
    USER_ACCESS_ID INT NOT NULL,
    CREATION_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    LAST_UPDATED_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT fk_user_access FOREIGN KEY (USER_ACCESS_ID) REFERENCES PERSON.USER_ACCESS(USER_ACCESS_ID)
);

-- Create a table to log events associated with user actions
CREATE TABLE MISC.EVENT_LOG (
    EVENT_LOG_ID SERIAL PRIMARY KEY,
    USER_ID INT,
    ACTION_DONE TEXT NOT NULL,
    EVENT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (USER_ID) REFERENCES PERSON.USERS(USER_ID)
);